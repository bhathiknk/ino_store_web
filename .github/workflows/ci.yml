name: Node.js CI/CD with Docker

on:
  push:
    branches: [ CI/CD ]
  pull_request:
    branches: [ CI/CD ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongo localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: 'npm'

      #  Install Client Dependencies
      - name: Install dependencies in Client
        run: npm install
        working-directory: ./client

      #  Lint Client Code
      - name: Run ESLint in Client
        run: npm run lint
        working-directory: ./client

      #  Run Client Tests
      - name: Run tests in Client
        run: npm test
        working-directory: ./client

      #  Install Server Dependencies
      - name: Install dependencies in Server
        run: npm install
        working-directory: ./server

      #  Set environment variables for Server
      - name: Set environment variables for Server
        run: echo "MONGO_URI_TEST=mongodb://localhost:27017/inoweb_test" >> $GITHUB_ENV

      #  Fix permissions for Jest in Server
      - name: Fix permissions for Jest
        run: chmod +x ./node_modules/.bin/jest
        working-directory: ./server

      #  Run Server Tests
      - name: Run tests in Server
        run: npm test
        working-directory: ./server

      #  Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      #  Build Docker Image for Client
      - name: Build Docker Image for Client
        run: docker build -t $DOCKER_USERNAME/inoweb-client:1.4 ./client

      #  Build Docker Image for Server
      - name: Build Docker Image for Server
        run: docker build -t $DOCKER_USERNAME/inoweb-server:1.4 ./server

      #  Push Docker Images to Docker Hub
      - name: Push Docker Images
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push $DOCKER_USERNAME/inoweb-client:1.4
          docker push $DOCKER_USERNAME/inoweb-server:1.4

      #  Validate Docker Compose
      - name: Validate Docker Compose
        run: docker-compose -f docker-compose.yml config
